# Generated by Django 4.2.7 on 2025-07-06 20:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rooms', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('can_pause', models.BooleanField(default=False)),
                ('analytics_mode', models.CharField(choices=[('realtime', 'Real-time'), ('batch', 'Batch Processing')], default='batch', max_length=20)),
                ('total_time', models.IntegerField(help_text='Total time in minutes')),
                ('questions_count', models.IntegerField(default=0)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tests', to=settings.AUTH_USER_MODEL)),
                ('room', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test', to='rooms.room')),
            ],
            options={
                'db_table': 'tests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('theory', 'Theory')], max_length=20)),
                ('options', models.JSONField(blank=True, default=list)),
                ('correct_answer', models.TextField()),
                ('evaluation_type', models.CharField(choices=[('exact', 'Exact Match'), ('keyword', 'Keyword Based')], default='exact', max_length=20)),
                ('keywords', models.JSONField(blank=True, default=dict)),
                ('keyword_threshold', models.FloatField(default=0.7)),
                ('difficulty_level', models.CharField(default='medium', max_length=20)),
                ('marks', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='tests.test')),
            ],
            options={
                'db_table': 'questions',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='KeywordBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(help_text='Weight percentage (0.0 to 1.0)')),
                ('keywords', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword_blocks', to='tests.question')),
            ],
            options={
                'db_table': 'keyword_blocks',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('confidence_level', models.IntegerField(blank=True, null=True)),
                ('time_taken', models.FloatField(help_text='Time taken in seconds')),
                ('time_before_first_answer', models.FloatField(default=0.0)),
                ('changed', models.BooleanField(default=False)),
                ('revisited', models.BooleanField(default=False)),
                ('mouse_clicks', models.IntegerField(default=0)),
                ('focus_lost_count', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.question')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'responses',
                'unique_together': {('user', 'test', 'question')},
            },
        ),
    ]
